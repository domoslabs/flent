## -*- mode: python; coding: utf-8 -*-

## rrul test specification

# to run these test with domos QoS you need to:
# Start irtt server listening on 4 different ports
# irtt server -i 0 --pburst=100000 -b :2112,:2113,:2114,:2115

# Setup each irtt flow to coresponding wmm class
# iptables -t mangle -A POSTROUTING -p udp --sport 2113 -j TOS --set-tos 0x40/0xff
# iptables -t mangle -A POSTROUTING -p udp --sport 2114 -j TOS --set-tos 0xa0/0xff
# iptables -t mangle -A POSTROUTING -p udp --sport 2115 -j TOS --set-tos 0xe0/0xff

include("netperf_definitions.inc")
DESCRIPTION="Realtime Response Under Load - exclusively Best Effort"
DEFAULTS={'PLOT': "all_scaled"}

DATA_SETS = o([
    ('TCP download BE',
     {'test': 'TCP_MAERTS', 'length': LENGTH, 'host': HOST, 'marking': 'CS0,CS0',
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo'}),
    ('TCP download BE2',
     {'test': 'TCP_MAERTS', 'length': LENGTH, 'host': HOST, 'marking': 'CS0,CS0',
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo'}),
    ('TCP download BE3',
     {'test': 'TCP_MAERTS', 'length': LENGTH, 'host': HOST, 'marking': 'CS0,CS0',
      'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo'}),
    ('TCP download BE4',
     {'test': 'TCP_MAERTS', 'length': LENGTH, 'host': HOST, 'marking': 'CS0,CS0',
       'delay': DELAY, 'units': 'Mbits/s', 'runner': 'netperf_demo'}),
    ('TCP download avg',
     {'apply_to': [glob("TCP download*", exclude=["TCP download sum"])],
       'units': 'Mbits/s',
       'runner': 'average',}),
    ('TCP download sum',
     {'apply_to': [glob("TCP download*", exclude=["TCP download avg"])],
       'units': 'Mbits/s',
       'runner': 'sum',}),
    ('TCP totals',
     {'apply_to': [glob("TCP*", exclude=["TCP download avg", "TCP download sum", "TCP upload avg", "TCP upload sum"])],
       'units': 'Mbits/s',
       'runner': 'sum',}),

    ('Ping (ms) UDP BE',
     {'runner': 'udp_rtt', 'length': TOTAL_LENGTH, 'host': '%s:2112' % HOST, 'marking':
      'CS0,CS0', 'units': 'ms', 'id': '%s UDP BE' % HOST}),
    ('Ping (ms) UDP BK',
     {'runner': 'udp_rtt', 'length': TOTAL_LENGTH, 'host': '%s:2113' % HOST, 'marking':
      'CS0,CS0', 'units': 'ms', 'id': '%s UDP BK' % HOST}),
    ('Ping (ms) UDP VI',
     {'runner': 'udp_rtt', 'length': TOTAL_LENGTH, 'host': '%s:2114' % HOST, 'marking':
      'CS0,CS0', 'units': 'ms', 'id': '%s UDP VI' % HOST}),
    ('Ping (ms) UDP VO',
     {'runner': 'udp_rtt', 'length': TOTAL_LENGTH, 'host': '%s:2115' % HOST, 'marking':
      'CS0,CS0', 'units': 'ms', 'id': '%s UDP VO' % HOST}),
    ('Ping (ms) avg',
     {'apply_to': [glob("Ping (ms)*")],
       'units': 'ms',
       'runner': 'average',}),
  ])

PLOTS = o([
    ('download',
     {'description': 'Download bandwidth plot',
      'type': 'timeseries',
      'legend_title': 'TCP download',
      'series': [{'data': 'TCP download BE',
                  'label': 'Client1 BE1'},
                 {'data': 'TCP download BE2',
                  'label': 'Client1 BE2'},
                 {'data': 'TCP download BE3',
                  'label': 'Client2 BE1'},
                 {'data': 'TCP download BE4',
                  'label': 'Client2 BE2'},
                 {'data': 'TCP download avg',
                  'label': 'Avg',
                  'smoothing': 10,
                  'color': 'black',
                  'linewidth': 2}]}),

    ('download_scaled',
     {'description': 'Download bandwidth w/axes scaled to remove outliers',
      'parent': 'download',
      'scaling': (5,95)}),

    ('ping',
     {'description': 'Ping plot',
      'type': 'timeseries',
      'legend_title': 'Ping (ms)',
      'axis_labels': ['Latency (ms)'],
      'series': [{'data': glob('Ping (ms)*', exclude=['Ping (ms) avg']),
                  'label': ''},
                 {'data': 'Ping (ms) avg',
                  'label': 'Avg',
                  'smoothing': 10,
                  'color': 'black',
                  'linewidth': 2}]}),

    ('ping_scaled',
     {'description': 'Ping w/axes scaled to remove outliers',
      'parent': 'ping',
      'scaling': (5,95)}),

    ('ping_cdf',
     {'description': 'Ping CDF plot',
      'type': 'cdf',
      'axis_labels': ['Latency (ms)'],
      'parent': 'ping',
      'cutoff': (DELAY,-DELAY)}),

    ('totals_bandwidth',
     {'description': 'Total bandwidth',
      'type': 'timeseries',
      'series': [{'data': 'TCP download sum',
                  'label': 'Download',
                  'smoothing': 10}]}),
    ('totals',
     {'description': 'Total bandwidth and average ping plot',
      'type': 'timeseries',
      'dual_axes': True,
      'axis_labels': [None, 'Latency (ms)'],
      'series': [{'data': 'TCP download sum',
                  'label': 'Download',
                  'smoothing': 10},
                 {'data': 'Ping (ms) UDP BE',
                  'label': 'Ping (ms) UDP BE',
                  'smoothing': 10,
                  'axis': 2}]}),
    ('totals_scaled',
     {'description': 'Total bandwidth and average ping plot (scaled)',
      'parent': 'totals',
      'scaling': (5,95)}),

    ('totals_combine',
     {'description': 'Combined total bandwidth and average ping plot',
      'parent': 'totals',
      'type': 'timeseries_combine',
      'group_by': 'groups_points'}),

    ('all_scaled',
     {'description': 'Download, ping (scaled versions)',
      'type': 'meta',
      'subplots': ('download_scaled', 'ping_scaled')}),

    ('all_scaled_delivery',
     {'description': 'Download, ping (scaled versions)',
      'type': 'meta',
      'subplots': ('download_scaled', 'ping_scaled')}),

    ('all',
     {'description': 'Download, ping (unscaled versions)',
      'type': 'meta',
      'subplots': ('download', 'ping')}),

    ('box_download',
     {'description': 'Download bandwidth box plot',
      'parent': 'download',
      'type': 'box'}),

    ('box_ping',
     {'description': 'Ping box plot',
      'parent': 'ping',
      'type': 'box'}),

    ('box_totals',
     {'description': 'Box plot of totals',
      'parent': 'totals',
      'type': 'box',}),

    ('bar_totals',
     {'description': 'Box plot of totals',
      'parent': 'totals',
      'type': 'bar',}),

    ('box_combine',
     {'description': 'Box plot of averages of several data files.',
      'type': 'box_combine',
      'dual_axes': True,
      'axis_labels': ['Mean TCP goodput (Mbit/s)', 'Mean induced latency (ms)'],
      'cutoff': (DELAY,-DELAY),
      'series': [{'data': 'TCP download sum',
                  'label': 'Download',
                  'combine_mode': 'mean'},
                 {'data': 'Ping (ms) avg',
                  'label': 'Induced latency (ms)',
                  'combine_mode': 'mean_span',
                  'axis': 2}]}),

    ('bar_combine',
     {'description': 'Bar plot of averages of several data files.',
      'type': 'bar_combine',
      'dual_axes': True,
      'axis_labels': ['Mean TCP goodput (Mbit/s)', 'Mean induced latency (ms)'],
      'cutoff': (DELAY,-DELAY),
      'series': [{'data': 'TCP download sum',
                  'label': 'Download',
                  'combine_mode': 'mean'},
                 {'data': 'Ping (ms) avg',
                  'label': 'Induced latency (ms)',
                  'combine_mode': 'mean_span',
                  'axis': 2}]}),

    ('box_ping_combine',
     {'description': 'Combination box plot of ping times',
      'type': 'box_combine',
      'legend_title': 'Ping (ms)',
      'axis_labels': ['Latency (ms)'],
      'cutoff': (DELAY,-DELAY),
      'series': [{'data': 'Ping (ms) avg',
                  'label': 'Ping (ms) avg'}]}),

    ('cdf_combine',
     {'description': 'CDF plot of averages of several data files.',
      'type': 'cdf_combine',
      'group_by': 'groups_concat',
      'axis_labels': ['Mean induced latency (ms)'],
      'cutoff': (DELAY,-DELAY),
      'series': [{'data': 'Ping (ms) avg',
                  'label': 'Induced latency (ms)',
                  'combine_mode': 'span',}
                 ]}),

    ])

include("common.inc")
